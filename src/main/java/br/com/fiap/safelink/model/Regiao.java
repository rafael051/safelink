package br.com.fiap.safelink.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.*;

import java.util.List;

/**
 * # üó∫Ô∏è Entidade: Regiao
 *
 * Representa uma √°rea geogr√°fica monitorada pelo sistema SafeLink.
 * Cada regi√£o pode estar associada a eventos naturais ocorridos,
 * alertas emitidos, previs√µes de risco e relatos de usu√°rios.
 *
 * ---
 * ## üîó Relacionamentos
 * - 1:N com `EventoNatural`
 * - 1:N com `PrevisaoRisco`
 * - 1:N com `Alerta`
 * - 1:N com `RelatoUsuario`
 *
 * ---
 * ## üéØ Finalidade
 * Permitir a identifica√ß√£o de zonas vulner√°veis e a agrega√ß√£o de dados
 * meteorol√≥gicos e sociais para atua√ß√£o r√°pida e estrat√©gica.
 */
@Entity
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "tb_regiao")
public class Regiao {

    // ===========================
    // üîë Identifica√ß√£o Geogr√°fica
    // ===========================

    /** Identificador √∫nico da regi√£o (chave prim√°ria). */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /** Nome da regi√£o (ex: "Centro", "Zona Leste", etc). */
    @NotBlank(message = "O nome da regi√£o √© obrigat√≥rio.")
    private String nome;

    /** Nome da cidade onde a regi√£o est√° localizada. */
    @NotBlank(message = "A cidade √© obrigat√≥ria.")
    private String cidade;

    /** Estado da regi√£o (UF). */
    @NotBlank(message = "O estado √© obrigat√≥rio.")
    private String estado;

    /** Latitude da coordenada central da regi√£o. */
    @NotNull(message = "Latitude √© obrigat√≥ria.")
    private Double latitude;

    /** Longitude da coordenada central da regi√£o. */
    @NotNull(message = "Longitude √© obrigat√≥ria.")
    private Double longitude;

    // ===========================
    // üîó Relacionamentos
    // ===========================

    /** Lista de eventos naturais registrados nesta regi√£o. */
    @OneToMany(mappedBy = "regiao", cascade = CascadeType.ALL)
    private List<EventoNatural> eventos;

    /** Lista de previs√µes de risco associadas a esta regi√£o. */
    @OneToMany(mappedBy = "regiao", cascade = CascadeType.ALL)
    private List<PrevisaoRisco> previsoes;

    /** Lista de alertas emitidos para esta regi√£o. */
    @OneToMany(mappedBy = "regiao", cascade = CascadeType.ALL)
    private List<Alerta> alertas;

    /** Lista de relatos de usu√°rios associados a esta regi√£o. */
    @OneToMany(mappedBy = "regiao", cascade = CascadeType.ALL)
    private List<RelatoUsuario> relatos;
}

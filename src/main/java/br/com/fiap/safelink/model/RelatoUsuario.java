package br.com.fiap.safelink.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.*;

import java.time.LocalDateTime;

/**
 * # üì¢ Entidade: RelatoUsuario
 *
 * Representa um relato enviado por um cidad√£o ou agente de campo atrav√©s do sistema.
 * Esse relato pode conter informa√ß√µes √∫teis como observa√ß√µes sobre inunda√ß√µes, rachaduras,
 * deslizamentos ou qualquer outra condi√ß√£o de risco visualizada.
 *
 * ---
 * ## üìå Utiliza√ß√£o
 * - Coleta de dados comunit√°rios (crowdsourcing).
 * - Complementa os dados t√©cnicos com informa√ß√µes humanas e locais.
 * - Pode alimentar a gera√ß√£o de alertas e planos de resposta.
 *
 * ---
 * ## üîó Relacionamentos
 * - N:1 com `User`
 * - N:1 com `Regiao`
 *
 * ---
 * @version 1.0
 * @author Rafael
 */
@Entity
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "tb_relato_usuario")
public class RelatoUsuario {

    // ===========================
    // üîë Identifica√ß√£o
    // ===========================

    /** Identificador √∫nico do relato enviado (chave prim√°ria). */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // ===========================
    // üí¨ Conte√∫do do Relato
    // ===========================

    /**
     * Texto do relato descritivo.
     * Pode incluir percep√ß√£o do risco, descri√ß√£o de danos, etc.
     */
    @NotBlank(message = "A mensagem do relato √© obrigat√≥ria.")
    private String mensagem;

    /**
     * Data e hora em que o relato foi feito.
     * Usado para rastrear o momento da observa√ß√£o do usu√°rio.
     */
    @NotNull(message = "A data do relato √© obrigat√≥ria.")
    private LocalDateTime dataRelato;

    // ===========================
    // üîó Relacionamentos
    // ===========================

    /**
     * Usu√°rio que realizou o relato.
     * Obrigatoriamente vinculado a um `User` autenticado no sistema.
     */
    @ManyToOne(optional = false)
    @JoinColumn(name = "user_id", nullable = false)
    private User usuario;

    /**
     * Regi√£o onde o relato foi feito ou observado.
     * Cada relato est√° vinculado a uma regi√£o cadastrada.
     */
    @ManyToOne(optional = false)
    @JoinColumn(name = "regiao_id", nullable = false)
    private Regiao regiao;
}
